=


# Mini-Project 8: Fruit Tracker

## Overview
Mini-Project 8 is an enhancement of the Fruit Tracker application. It transitions from a simple front-end React application in Mini-Project 7 to a full-stack application integrating Node.js, Express, MongoDB, and React.

## Changes from Mini-Project 7 to Mini-Project 8
- **Backend Integration**: Implemented a Node.js/Express backend to replace the static fruits array with a MongoDB database.
- **CRUD Operations**: Enabled full CRUD (Create, Read, Update, Delete) operations for fruit management using MongoDB and Mongoose.
- **API Routes**: Developed RESTful API routes for dynamic data handling.
- **Frontend Enhancements**: Upgraded the React frontend for interactive communication with the backend API.
- **Error Handling**: Added comprehensive error handling in both frontend and backend.
- **Deployment Preparation**: Configured the application for deployment on render.com.

## Requirements
- Node.js
- MongoDB
- React

## Setup and Installation
1. **Clone the Repository**:


2. **Backend Setup**:
- Navigate to the `backend/fruitapp` directory.
- Install dependencies:
  ```
  npm install
  ```
- Ensure MongoDB is installed and running on your system.
- Start the backend server:
  ```
  npm start
  ```

3. **Frontend Setup**:
- Navigate to the `frontend` directory.
- Install dependencies:
  ```
  npm install
  ```
- Start the React application:
  ```
  npm start
  ```

## Running the Application
- The backend server will be running on `http://localhost:3001`.
- Access the frontend application through `http://localhost:3000` in your web browser.

## Additional Notes
- Make sure MongoDB is running before starting the backend server.
- The frontend and backend need to be started separately.
"""




